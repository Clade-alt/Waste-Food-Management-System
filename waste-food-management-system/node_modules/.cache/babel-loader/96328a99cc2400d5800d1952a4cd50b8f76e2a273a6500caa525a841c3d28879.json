{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\waste-food-management-system\\\\waste-food-management-system\\\\src\\\\chart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    // Call the API to retrieve the chart data\n    fetch('/api/chartData').then(response => response.json()).then(data => {\n      // Set the chart data in state\n      setChartData({\n        labels: data.labels,\n        datasets: [{\n          label: 'Chart Data',\n          data: data.data,\n          backgroundColor: 'rgba(75,192,192,1)'\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useEffect","useState","Bar","jsxDEV","_jsxDEV","Chart","_s","chartData","setChartData","fetch","then","response","json","data","labels","datasets","label","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Projects/waste-food-management-system/waste-food-management-system/src/chart.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Chart() {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Call the API to retrieve the chart data\r\n    fetch('/api/chartData')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Set the chart data in state\r\n        setChartData({\r\n          labels: data.labels,\r\n          datasets: [\r\n            {\r\n              label: 'Chart Data',\r\n              data: data.data,\r\n              backgroundColor: 'rgba(75,192,192,1)'\r\n            }\r\n          ]\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chart</h2>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,gBAAgB,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,YAAY,CAAC;QACXM,MAAM,EAAED,IAAI,CAACC,MAAM;QACnBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnBH,IAAI,EAAEA,IAAI,CAACA,IAAI;UACfI,eAAe,EAAE;QACnB,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdlB,OAAA,CAACF,GAAG;MAACW,IAAI,EAAEN;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAEV;AAAChB,EAAA,CA5BQD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}