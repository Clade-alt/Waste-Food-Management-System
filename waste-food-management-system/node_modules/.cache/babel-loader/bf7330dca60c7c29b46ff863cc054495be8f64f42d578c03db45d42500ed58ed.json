{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\waste-food-management-system\\\\waste-food-management-system\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const donationsResponse = await axios.get('/api/donations');\n        const foodRequestsResponse = await axios.get('/api/food-requests');\n        const industryPurchasesResponse = await axios.get('/api/industry-purchases');\n        const donations = donationsResponse.data;\n        const foodRequests = foodRequestsResponse.data;\n        const industryPurchases = industryPurchasesResponse.data;\n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        const donationsData = Array.from({\n          length: 12\n        }, () => 0);\n        const foodRequestsData = Array.from({\n          length: 12\n        }, () => 0);\n        const industryPurchasesData = Array.from({\n          length: 12\n        }, () => 0);\n        donations.forEach(donation => {\n          const month = new Date(donation.date).getMonth();\n          donationsData[month]++;\n        });\n        foodRequests.forEach(foodRequest => {\n          const month = new Date(foodRequest.date).getMonth();\n          foodRequestsData[month]++;\n        });\n        industryPurchases.forEach(industryPurchase => {\n          const month = new Date(industryPurchase.date).getMonth();\n          industryPurchasesData[month]++;\n        });\n        setData({\n          labels: labels,\n          datasets: [{\n            label: 'Donations',\n            data: donationsData,\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n            stack: 'stack 0'\n          }, {\n            label: 'Food Requests',\n            data: foodRequestsData,\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 1,\n            stack: 'stack 0'\n          }, {\n            label: 'Industry Purchases',\n            data: industryPurchasesData,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n            stack: 'stack 0'\n          }]\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","fetchData","donationsResponse","get","foodRequestsResponse","industryPurchasesResponse","donations","foodRequests","industryPurchases","labels","donationsData","Array","from","length","foodRequestsData","industryPurchasesData","forEach","donation","month","Date","date","getMonth","foodRequest","industryPurchase","datasets","label","backgroundColor","borderColor","borderWidth","stack","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Projects/waste-food-management-system/waste-food-management-system/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const donationsResponse = await axios.get('/api/donations');\r\n        const foodRequestsResponse = await axios.get('/api/food-requests');\r\n        const industryPurchasesResponse = await axios.get('/api/industry-purchases');\r\n\r\n        const donations = donationsResponse.data;\r\n        const foodRequests = foodRequestsResponse.data;\r\n        const industryPurchases = industryPurchasesResponse.data;\r\n\r\n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        const donationsData = Array.from({ length: 12 }, () => 0);\r\n        const foodRequestsData = Array.from({ length: 12 }, () => 0);\r\n        const industryPurchasesData = Array.from({ length: 12 }, () => 0);\r\n\r\n        donations.forEach(donation => {\r\n          const month = new Date(donation.date).getMonth();\r\n          donationsData[month]++;\r\n        });\r\n\r\n        foodRequests.forEach(foodRequest => {\r\n          const month = new Date(foodRequest.date).getMonth();\r\n          foodRequestsData[month]++;\r\n        });\r\n\r\n        industryPurchases.forEach(industryPurchase => {\r\n          const month = new Date(industryPurchase.date).getMonth();\r\n          industryPurchasesData[month]++;\r\n        });\r\n\r\n        setData({\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Donations',\r\n              data: donationsData,\r\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              borderWidth: 1,\r\n              stack: 'stack 0'\r\n            },\r\n            {\r\n              label: 'Food Requests',\r\n              data: foodRequestsData,\r\n              backgroundColor: 'rgba(255, 206, 86, 0.2)',\r\n              borderColor: 'rgba(255, 206, 86, 1)',\r\n              borderWidth: 1,\r\n              stack: 'stack 0'\r\n            },\r\n            {\r\n              label: 'Industry Purchases',\r\n              data: industryPurchasesData,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 1,\r\n              stack: 'stack 0'\r\n            }\r\n          ]\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <Bar data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,eAAeS,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,iBAAiB,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gBAAgB,CAAC;QAC3D,MAAMC,oBAAoB,GAAG,MAAMX,KAAK,CAACU,GAAG,CAAC,oBAAoB,CAAC;QAClE,MAAME,yBAAyB,GAAG,MAAMZ,KAAK,CAACU,GAAG,CAAC,yBAAyB,CAAC;QAE5E,MAAMG,SAAS,GAAGJ,iBAAiB,CAACH,IAAI;QACxC,MAAMQ,YAAY,GAAGH,oBAAoB,CAACL,IAAI;QAC9C,MAAMS,iBAAiB,GAAGH,yBAAyB,CAACN,IAAI;QAExD,MAAMU,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QACzI,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,MAAM,CAAC,CAAC;QACzD,MAAMC,gBAAgB,GAAGH,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,MAAM,CAAC,CAAC;QAC5D,MAAME,qBAAqB,GAAGJ,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,MAAM,CAAC,CAAC;QAEjEP,SAAS,CAACU,OAAO,CAACC,QAAQ,IAAI;UAC5B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,QAAQ,EAAE;UAChDX,aAAa,CAACQ,KAAK,CAAC,EAAE;QACxB,CAAC,CAAC;QAEFX,YAAY,CAACS,OAAO,CAACM,WAAW,IAAI;UAClC,MAAMJ,KAAK,GAAG,IAAIC,IAAI,CAACG,WAAW,CAACF,IAAI,CAAC,CAACC,QAAQ,EAAE;UACnDP,gBAAgB,CAACI,KAAK,CAAC,EAAE;QAC3B,CAAC,CAAC;QAEFV,iBAAiB,CAACQ,OAAO,CAACO,gBAAgB,IAAI;UAC5C,MAAML,KAAK,GAAG,IAAIC,IAAI,CAACI,gBAAgB,CAACH,IAAI,CAAC,CAACC,QAAQ,EAAE;UACxDN,qBAAqB,CAACG,KAAK,CAAC,EAAE;QAChC,CAAC,CAAC;QAEFlB,OAAO,CAAC;UACNS,MAAM,EAAEA,MAAM;UACde,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,WAAW;YAClB1B,IAAI,EAAEW,aAAa;YACnBgB,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACT,CAAC,EACD;YACEJ,KAAK,EAAE,eAAe;YACtB1B,IAAI,EAAEe,gBAAgB;YACtBY,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACT,CAAC,EACD;YACEJ,KAAK,EAAE,oBAAoB;YAC3B1B,IAAI,EAAEgB,qBAAqB;YAC3BW,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACT,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF;IAEA7B,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBzC,OAAA,CAACF,GAAG;MAACK,IAAI,EAAEA;IAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV;AAACvC,EAAA,CA7EQD,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AA+ElB,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}