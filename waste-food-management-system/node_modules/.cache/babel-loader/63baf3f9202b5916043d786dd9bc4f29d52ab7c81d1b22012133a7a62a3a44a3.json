{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\waste-food-management-system\\\\waste-food-management-system\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data'); // Replace with your API endpoint for fetching data\n      const data = response.data; // Assuming the response contains an array of data objects\n      setChartData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    createChart();\n  }, [chartData]);\n  const createChart = () => {\n    const chartCanvas = document.getElementById('chartCanvas');\n    new Chart(chartCanvas, {\n      type: 'bar',\n      data: {\n        labels: chartData.map(item => item.label),\n        datasets: [{\n          label: 'Donations',\n          data: chartData.map(item => item.donations),\n          backgroundColor: 'rgba(75, 192, 192, 0.6)'\n        }\n        // Add additional datasets for food requests, industry purchases, etc.\n        ]\n      },\n\n      options: {\n        // Configure chart options as needed\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"chartCanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"mVhWrIOL/+h1my2Da5IBcaVB7wY=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","Chart","axios","jsxDEV","_jsxDEV","DashboardPage","_s","chartData","setChartData","fetchData","response","get","data","error","console","createChart","chartCanvas","document","getElementById","type","labels","map","item","label","datasets","donations","backgroundColor","options","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["F:/Projects/waste-food-management-system/waste-food-management-system/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js';\r\nimport axios from 'axios';\r\n\r\nfunction DashboardPage() {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('/api/data'); // Replace with your API endpoint for fetching data\r\n      const data = response.data; // Assuming the response contains an array of data objects\r\n      setChartData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    createChart();\r\n  }, [chartData]);\r\n\r\n  const createChart = () => {\r\n    const chartCanvas = document.getElementById('chartCanvas');\r\n    new Chart(chartCanvas, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: chartData.map(item => item.label),\r\n        datasets: [\r\n          {\r\n            label: 'Donations',\r\n            data: chartData.map(item => item.donations),\r\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n          },\r\n          // Add additional datasets for food requests, industry purchases, etc.\r\n        ],\r\n      },\r\n      options: {\r\n        // Configure chart options as needed\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <canvas id=\"chartCanvas\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdU,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;MAC/C,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC5BJ,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdgB,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EAEf,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAC1D,IAAIjB,KAAK,CAACe,WAAW,EAAE;MACrBG,IAAI,EAAE,KAAK;MACXP,IAAI,EAAE;QACJQ,MAAM,EAAEb,SAAS,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;QACzCC,QAAQ,EAAE,CACR;UACED,KAAK,EAAE,WAAW;UAClBX,IAAI,EAAEL,SAAS,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,SAAS,CAAC;UAC3CC,eAAe,EAAE;QACnB;QACA;QAAA;MAEJ,CAAC;;MACDC,OAAO,EAAE;QACP;MAAA;IAEJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClB5B,OAAA;MAAQ6B,EAAE,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;AAEV;AAAC1B,EAAA,CAhDQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}